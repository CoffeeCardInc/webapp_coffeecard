{"ast":null,"code":"var _jsxFileName = \"/home/andor/Projects/CoffeeCard/webapp_coffeecard/frontend/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Cart from '../components/cart';\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport RestaurantList from '../components/restaurantList';\nimport { Alert, InputGroup, InputGroupAddon, Input } from 'reactstrap';\nimport Landing from '../components/Landing';\n\nfunction Home() {\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:1337';\n  console.log(`URL: ${API_URL}`);\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n  const link = new HttpLink({\n    uri: `${API_URL}/graphql`\n  });\n  const cache = new InMemoryCache();\n  const client = new ApolloClient({\n    link,\n    cache\n  });\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Alert, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Hi! This project is currently under construction\")), __jsx(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \" Local Caf\\xE9s\"), __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: e => setQuery(e.target.value.toLocaleLowerCase()),\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(RestaurantList, {\n    search: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/andor/Projects/CoffeeCard/webapp_coffeecard/frontend/pages/index.js"],"names":["React","useState","Cart","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","RestaurantList","Alert","InputGroup","InputGroupAddon","Input","Landing","Home","API_URL","process","env","NEXT_PUBLIC_API_URL","console","log","query","setQuery","link","uri","cache","client","e","target","value","toLocaleLowerCase"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,aAJF,QAKO,gBALP;AAMA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,eAA5B,EAA6CC,KAA7C,QAA0D,YAA1D;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,QAAOL,OAAQ,EAA5B;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMqB,IAAI,GAAG,IAAIjB,QAAJ,CAAa;AAAEkB,IAAAA,GAAG,EAAG,GAAET,OAAQ;AAAlB,GAAb,CAAb;AACA,QAAMU,KAAK,GAAG,IAAIlB,aAAJ,EAAd;AACA,QAAMmB,MAAM,GAAG,IAAIrB,YAAJ,CAAiB;AAAEkB,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAjB,CAAf;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAGC,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,iBAAf,EAAD,CAD3B;AAEE,IAAA,KAAK,EAAET,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CANF,EAiBE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD;;AACD,eAAeP,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport Cart from '../components/cart'\nimport {\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client'\nimport RestaurantList from '../components/restaurantList'\nimport { Alert, InputGroup, InputGroupAddon, Input } from 'reactstrap'\nimport Landing from '../components/Landing'\n\nfunction Home() {\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:1337'\n  console.log(`URL: ${API_URL}`)\n  const [query, setQuery] = useState('')\n  const link = new HttpLink({ uri: `${API_URL}/graphql` })\n  const cache = new InMemoryCache()\n  const client = new ApolloClient({ link, cache })\n\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <Alert color='primary'>\n          Hi! This project is currently under construction\n        </Alert>\n      </div>\n      <div className='search'>\n        <h2> Local Caf√©s</h2>\n        <InputGroup>\n          <InputGroupAddon addonType='append'> Search </InputGroupAddon>\n          <Input\n            onChange={(e) => setQuery(e.target.value.toLocaleLowerCase())}\n            value={query}\n          />\n        </InputGroup>\n        <br></br>\n      </div>\n      <RestaurantList search={query} />\n    </ApolloProvider>\n  )\n}\nexport default Home\n"]},"metadata":{},"sourceType":"module"}