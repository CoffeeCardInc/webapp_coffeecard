
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.8.0
 * Query Engine version: d6e67a83f971b175a593ccc12e15c4a757f93ffe
 */
Prisma.prismaVersion = {
  client: "4.8.0",
  engine: "d6e67a83f971b175a593ccc12e15c4a757f93ffe"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.CustomerScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  full_name: 'full_name',
  email: 'email',
  passowrd: 'passowrd',
  date_of_birth: 'date_of_birth',
  language: 'language',
  city: 'city',
  membership_status: 'membership_status',
  created_on: 'created_on',
  last_modifier: 'last_modifier',
  last_login: 'last_login',
  user_id: 'user_id'
});

exports.Prisma.MemberScalarFieldEnum = makeEnum({
  member_id: 'member_id',
  user_id: 'user_id',
  shop_id: 'shop_id'
});

exports.Prisma.MembershipScalarFieldEnum = makeEnum({
  user_id: 'user_id',
  creation_on: 'creation_on',
  subscribed_on: 'subscribed_on',
  active: 'active',
  total_redemptions: 'total_redemptions',
  remaining_redemptions: 'remaining_redemptions',
  refill_frequency: 'refill_frequency',
  last_refill: 'last_refill',
  last_modifiered: 'last_modifiered',
  membership_id: 'membership_id',
  pass_id: 'pass_id'
});

exports.Prisma.MenuScalarFieldEnum = makeEnum({
  menu_id: 'menu_id',
  shop_id: 'shop_id',
  name: 'name',
  description: 'description',
  created_on: 'created_on',
  last_modified: 'last_modified',
  modifier_1: 'modifier_1',
  modifier_2: 'modifier_2',
  modifier_3: 'modifier_3',
  modifier_4: 'modifier_4',
  modifier_5: 'modifier_5'
});

exports.Prisma.ModifierScalarFieldEnum = makeEnum({
  modifier_id: 'modifier_id',
  shop_id: 'shop_id',
  menu_id: 'menu_id',
  name: 'name',
  type: 'type',
  class: 'class',
  description: 'description',
  ingredients: 'ingredients',
  created_on: 'created_on',
  last_modifiered: 'last_modifiered'
});

exports.Prisma.PassScalarFieldEnum = makeEnum({
  pass_id: 'pass_id',
  shop_id: 'shop_id',
  pass_name: 'pass_name',
  pass_description: 'pass_description',
  created_on: 'created_on',
  last_modified: 'last_modified',
  active: 'active',
  pass_base_price: 'pass_base_price',
  pass_base_price_frequency: 'pass_base_price_frequency',
  pass_payment_method: 'pass_payment_method',
  pass_additional_pricing: 'pass_additional_pricing',
  pass_other_options: 'pass_other_options',
  pass_currency: 'pass_currency',
  perk_item_1: 'perk_item_1',
  perk_item_2: 'perk_item_2',
  perk_item_3: 'perk_item_3',
  perk_item_4: 'perk_item_4',
  perk_item_5: 'perk_item_5',
  perk_item_6: 'perk_item_6',
  perk_item_7: 'perk_item_7',
  perk_item_8: 'perk_item_8',
  perk_item_9: 'perk_item_9',
  perk_item_10: 'perk_item_10',
  perk_item_11: 'perk_item_11',
  perk_item_12: 'perk_item_12',
  custom_perk_item_1: 'custom_perk_item_1',
  custom_perk_item_2: 'custom_perk_item_2',
  custom_perk_item_3: 'custom_perk_item_3',
  custom_perk_item_4: 'custom_perk_item_4',
  custom_perk_item_5: 'custom_perk_item_5',
  custom_perk_item_6: 'custom_perk_item_6',
  custom_perk_item_1_price: 'custom_perk_item_1_price',
  custom_perk_item_2_price: 'custom_perk_item_2_price',
  custom_perk_item_3_price: 'custom_perk_item_3_price',
  custom_perk_item_4_price: 'custom_perk_item_4_price',
  custom_perk_item_5_price: 'custom_perk_item_5_price',
  custom_perk_item_6_price: 'custom_perk_item_6_price',
  visible: 'visible',
  requirement_1: 'requirement_1',
  requirement_2: 'requirement_2',
  requirement_3: 'requirement_3',
  requirement_4: 'requirement_4',
  requirement_5: 'requirement_5',
  requirement_6: 'requirement_6',
  requirement_7: 'requirement_7',
  requirement_8: 'requirement_8',
  requirement_9: 'requirement_9'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  email: 'email',
  password: 'password',
  is_shop: 'is_shop'
});


exports.Prisma.ModelName = makeEnum({
  customer: 'customer',
  member: 'member',
  membership: 'membership',
  menu: 'menu',
  modifier: 'modifier',
  pass: 'pass',
  user: 'user'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
